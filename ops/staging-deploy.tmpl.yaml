# Default values for slack-scibot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/scientist-softserv/slack-scibot
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: github
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  hosts:
    - host: slack-scibot.notch8.cloud
      paths:
        - path: /
  annotations: {
    kubernetes.io/ingress.class: "nginx",
    nginx.ingress.kubernetes.io/proxy-body-size: "0",
    cert-manager.io/cluster-issuer: letsencrypt-production
  }
  tls:
    - hosts:
        - slack-scibot.notch8.cloud
      secretName: slack-scibot-tls

postgres:
  enabled: false
  # auth:
  #   postgresPassword: ""
  #   username: ""
  #   password: ""
  #   database: ""

# database configuration for an external postgresql;
#   ignored if `postgresql.enabled` is true
externalPostgresql:
  host: pg-postgresql.staging-postgres.svc.cluster.local
  username: postgres
  password: $POSTGRES_PASSWORD

env:
  configmap:
    DB_HOST: pg-postgresql.staging-postgres.svc.cluster.local
    DB_NAME: slack-scibot-staging
    DB_USER: postgres
    DB_PASS: $POSTGRES_PASSWORD
    SLACK_CLIENT_ID: $SLACK_CLIENT_ID
    SLACK_CLIENT_SECRET: $SLACK_CLIENT_SECRET
    SLACK_OAUTH_SCOPE: users:read,channels:read,groups:read,chat:write,commands,incoming-webhook
    SLACK_SIGNING_SECRET: $SLACK_SIGNING_SECRET